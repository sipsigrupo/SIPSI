<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>配置 on Blowfish</title>
    <link>https://sipsigrupo.github.io:1313/Site/zh-cn/tags/%E9%85%8D%E7%BD%AE/</link>
    <description>Recent content in 配置 on Blowfish</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>© 2024 Blowfish</copyright>
    <atom:link href="https://sipsigrupo.github.io:1313/Site/zh-cn/tags/%E9%85%8D%E7%BD%AE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>配置</title>
      <link>https://sipsigrupo.github.io:1313/Site/zh-cn/docs/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sipsigrupo.github.io:1313/Site/zh-cn/docs/configuration/</guid>
      <description>Blowfish 适宜个高度定制化的主题，使用到了一些 Hugo 中最新的特性来简化配置方式。
主题附带了默认配置，可以让你快速启动一个基本的博客或静态网站。
我们刚刚推出了 CLI 工具，来帮助你快速上手 Blowfish。它将帮助你进行安装和配置。使用以下命令可以全局范围安装 CLI 工具：
npx blowfish-tools 配置文件是基于 TOML 格式的，这也是 Hugo 默认支持的语法。当然如果你愿意，也可以将配置转换成 YAML 或 JSON 格式。
默认情况下，在每个文件中都定义了主题中的可用参数，因此你可以自由调整设置来满足你的需求。
正如安装说明中的内容，如果你想调整主题配置，可以修改 Hugo 项目中 config/_default/ 文件夹下的文件，并删除项目根目录中的 config.toml 文件。网站配置 #Blowfish 主题支持了 Hugo 框架中定义的所有标准配置变量。但如果希望有更好的体验，需要设置一些特定的配置。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://sipsigrupo.github.io:1313/Site/docs/configuration/featured.svg" />
    </item>
    
    <item>
      <title>Front Matter(文件头信息)</title>
      <link>https://sipsigrupo.github.io:1313/Site/zh-cn/docs/front-matter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sipsigrupo.github.io:1313/Site/zh-cn/docs/front-matter/</guid>
      <description>除了 Hugo 中默认的 front matter，Blowfish 主题中还添加了大量的参数选项来自定义单个页面的展示方式。所有可用的扉页参数如下。
front matter 参数中的默认值是从基础配置中继承的，所有只有当你想要覆盖默认值时，才需要在当前页面指定这些参数。
名称 默认值 描述 title 无 文章名称。 description 无 文章的描述信息，它会被添加在 HTML 的 &amp;lt;meta&amp;gt; 元数据中。 externalUrl 无 如果文章发布在第三方网站上，这里提供只想对应文章的 URL 地址。提供 URL 将会组织生成内容页面，对这篇文章的任何引用都会直接跳转到第三方网站的 URL 上面。 editURL article.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://sipsigrupo.github.io:1313/Site/docs/front-matter/featured.svg" />
    </item>
    
    <item>
      <title>多创作者模式</title>
      <link>https://sipsigrupo.github.io:1313/Site/zh-cn/docs/multi-author/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sipsigrupo.github.io:1313/Site/zh-cn/docs/multi-author/</guid>
      <description>一个网站会有多个创作者共同贡献内容，所以需要再整个网站中默认使用多创作者。对于这种情况，Blowfish 允许用户使用多创作者功能拓展创作者列表。
为了保持向后兼容，这个功能仅允许定义额外的创作者，并不会以任何方式修改之前通过配置文件添加的创作者。
新建创作者 #新建创作者的第一步是设置一个 ./data/authors 文件夹。然后，你可以在里面简单的添加新创作者的 json 文件。文件的名称是你在文章引用该作者时需要指定的 key。
例如，在 ./data/authors 文件夹中新建一个 nunocoracao.json 文件。文件的内容示例如下。name、image、bio 和 social 是目前创作者文件支持的4个参数，这与你在 languages.[language-code].toml 配置文件中的默认创作者配置类似。
注意：社交参数中的 key 将会默认获取主题的图标 icon，当然你也可以在 assests/icons 文件夹中设置任何图标。
{ &amp;#34;name&amp;#34;: &amp;#34;Nuno Coração&amp;#34;, &amp;#34;image&amp;#34; : &amp;#34;img/nuno_avatar.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://sipsigrupo.github.io:1313/Site/docs/multi-author/featured.svg" />
    </item>
    
  </channel>
</rss>
